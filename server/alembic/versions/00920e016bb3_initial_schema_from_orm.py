"""initial schema from orm

Revision ID: 00920e016bb3
Revises: 
Create Date: 2025-10-20 07:37:59.884871

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '00920e016bb3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('posts_collected', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('collection_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_collection_runs_id'), ['id'], unique=False)

    op.create_table('data_feeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('feed_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.Column('next_run_at', sa.DateTime(), nullable=True),
    sa.Column('total_runs', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('data_feeds', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_data_feeds_id'), ['id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('picture', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('account_locked_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_admin'), ['is_admin'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)

    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bluesky_id', sa.String(length=255), nullable=False),
    sa.Column('author_handle', sa.String(length=255), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('collection_run_id', sa.Integer(), nullable=False),
    sa.Column('sentiment', sa.String(length=50), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('disaster_type', sa.String(length=50), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('repost_count', sa.Integer(), nullable=True),
    sa.Column('reply_count', sa.Integer(), nullable=True),
    sa.Column('author_display_name', sa.String(length=255), nullable=True),
    sa.Column('author_description', sa.Text(), nullable=True),
    sa.Column('author_followers_count', sa.Integer(), nullable=True),
    sa.Column('author_following_count', sa.Integer(), nullable=True),
    sa.Column('author_posts_count', sa.Integer(), nullable=True),
    sa.Column('author_avatar_url', sa.Text(), nullable=True),
    sa.Column('has_media', sa.Boolean(), nullable=True),
    sa.Column('media_count', sa.Integer(), nullable=True),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('hashtags', sa.JSON(), nullable=True),
    sa.Column('mentions', sa.JSON(), nullable=True),
    sa.Column('external_urls', sa.JSON(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('post_location', sa.String(length=500), nullable=True),
    sa.Column('post_latitude', sa.Float(), nullable=True),
    sa.Column('post_longitude', sa.Float(), nullable=True),
    sa.Column('indexed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('content_labels', sa.JSON(), nullable=True),
    sa.Column('content_warnings', sa.JSON(), nullable=True),
    sa.Column('moderation_status', sa.String(length=50), nullable=True),
    sa.Column('reply_to_post_id', sa.String(length=255), nullable=True),
    sa.Column('reply_root_post_id', sa.String(length=255), nullable=True),
    sa.Column('thread_depth', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_run_id'], ['collection_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_posts_bluesky_id'), ['bluesky_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_posts_disaster_type'), ['disaster_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_id'), ['id'], unique=False)

    op.create_table('user_alert_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('alert_types', sa.JSON(), nullable=False),
    sa.Column('min_severity', sa.Integer(), nullable=False),
    sa.Column('email_enabled', sa.Boolean(), nullable=False),
    sa.Column('regions', sa.JSON(), nullable=True),
    sa.Column('disaster_types', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_alert_preferences', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_alert_preferences_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_alert_preferences_user_id'), ['user_id'], unique=False)

    op.create_table('user_notification_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('email_opt_in', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_notification_preferences', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_notification_preferences_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_notification_preferences_user_id'), ['user_id'], unique=False)

    op.create_table('disasters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_name', sa.String(length=500), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('event_time', sa.DateTime(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('magnitude', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('affected_population', sa.Integer(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=False),
    sa.Column('collection_run_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('disaster_type', sa.String(length=50), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['collection_run_id'], ['collection_runs.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('disasters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_disasters_archived'), ['archived'], unique=False)
        batch_op.create_index(batch_op.f('ix_disasters_event_time'), ['event_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_disasters_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_disasters_latitude'), ['latitude'], unique=False)
        batch_op.create_index(batch_op.f('ix_disasters_location_name'), ['location_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_disasters_longitude'), ['longitude'], unique=False)

    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disaster_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('alert_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['disaster_id'], ['disasters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alerts_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_disaster_id'), ['disaster_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_severity'), ['severity'], unique=False)

    op.create_table('email_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('crisis_id', sa.Integer(), nullable=True),
    sa.Column('email_status', sa.String(length=50), nullable=True),
    sa.Column('provider_message_id', sa.String(length=255), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('opened_at', sa.DateTime(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['crisis_id'], ['disasters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('email_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_email_logs_crisis_id'), ['crisis_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_email_logs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_email_logs_user_id'), ['user_id'], unique=False)

    op.create_table('alert_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alert_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('recipient_email', sa.String(length=255), nullable=False),
    sa.Column('recipient_name', sa.String(length=255), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('alert_queue', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alert_queue_alert_id'), ['alert_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_queue_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_queue_priority'), ['priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_queue_scheduled_at'), ['scheduled_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_queue_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_queue_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('alert_queue', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alert_queue_user_id'))
        batch_op.drop_index(batch_op.f('ix_alert_queue_status'))
        batch_op.drop_index(batch_op.f('ix_alert_queue_scheduled_at'))
        batch_op.drop_index(batch_op.f('ix_alert_queue_priority'))
        batch_op.drop_index(batch_op.f('ix_alert_queue_id'))
        batch_op.drop_index(batch_op.f('ix_alert_queue_alert_id'))

    op.drop_table('alert_queue')
    with op.batch_alter_table('email_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_email_logs_id'))
        batch_op.drop_index(batch_op.f('ix_email_logs_crisis_id'))

    op.drop_table('email_logs')
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alerts_severity'))
        batch_op.drop_index(batch_op.f('ix_alerts_is_read'))
        batch_op.drop_index(batch_op.f('ix_alerts_id'))
        batch_op.drop_index(batch_op.f('ix_alerts_disaster_id'))
        batch_op.drop_index(batch_op.f('ix_alerts_created_at'))

    op.drop_table('alerts')
    with op.batch_alter_table('disasters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_disasters_longitude'))
        batch_op.drop_index(batch_op.f('ix_disasters_location_name'))
        batch_op.drop_index(batch_op.f('ix_disasters_latitude'))
        batch_op.drop_index(batch_op.f('ix_disasters_id'))
        batch_op.drop_index(batch_op.f('ix_disasters_event_time'))
        batch_op.drop_index(batch_op.f('ix_disasters_archived'))

    op.drop_table('disasters')
    with op.batch_alter_table('user_notification_preferences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_notification_preferences_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_notification_preferences_id'))

    op.drop_table('user_notification_preferences')
    with op.batch_alter_table('user_alert_preferences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_alert_preferences_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_alert_preferences_id'))

    op.drop_table('user_alert_preferences')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_id'))
        batch_op.drop_index(batch_op.f('ix_posts_disaster_type'))
        batch_op.drop_index(batch_op.f('ix_posts_bluesky_id'))

    op.drop_table('posts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_is_admin'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('data_feeds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_data_feeds_id'))

    op.drop_table('data_feeds')
    with op.batch_alter_table('collection_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_collection_runs_id'))

    op.drop_table('collection_runs')
    # ### end Alembic commands ###
