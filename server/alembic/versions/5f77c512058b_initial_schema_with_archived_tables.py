"""initial schema with archived tables

Revision ID: 5f77c512058b
Revises: 
Create Date: 2025-10-20 16:26:45.034910

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5f77c512058b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('archived_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=False),
    sa.Column('disaster_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('archive_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('archived_alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_archived_alerts_disaster_id'), ['disaster_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_alerts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_alerts_original_id'), ['original_id'], unique=False)

    op.create_table('archived_disasters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=False),
    sa.Column('disaster_type', sa.String(length=100), nullable=False),
    sa.Column('location', sa.JSON(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('affected_population', sa.Integer(), nullable=True),
    sa.Column('archive_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('archived_disasters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_archived_disasters_end_time'), ['end_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_disasters_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_disasters_original_id'), ['original_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_disasters_start_time'), ['start_time'], unique=False)

    op.create_table('archived_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=False),
    sa.Column('disaster_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('post_id', sa.String(length=255), nullable=False),
    sa.Column('platform', sa.String(length=50), nullable=False),
    sa.Column('event_time', sa.DateTime(), nullable=False),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('sentiment', sa.Float(), nullable=True),
    sa.Column('archive_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('archived_posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_archived_posts_disaster_id'), ['disaster_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_posts_event_time'), ['event_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_posts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_archived_posts_original_id'), ['original_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('archived_posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_archived_posts_original_id'))
        batch_op.drop_index(batch_op.f('ix_archived_posts_id'))
        batch_op.drop_index(batch_op.f('ix_archived_posts_event_time'))
        batch_op.drop_index(batch_op.f('ix_archived_posts_disaster_id'))

    op.drop_table('archived_posts')
    with op.batch_alter_table('archived_disasters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_archived_disasters_start_time'))
        batch_op.drop_index(batch_op.f('ix_archived_disasters_original_id'))
        batch_op.drop_index(batch_op.f('ix_archived_disasters_id'))
        batch_op.drop_index(batch_op.f('ix_archived_disasters_end_time'))

    op.drop_table('archived_disasters')
    with op.batch_alter_table('archived_alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_archived_alerts_original_id'))
        batch_op.drop_index(batch_op.f('ix_archived_alerts_id'))
        batch_op.drop_index(batch_op.f('ix_archived_alerts_disaster_id'))

    op.drop_table('archived_alerts')
    # ### end Alembic commands ###
